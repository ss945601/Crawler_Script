


#--------
#將設定寫入下方Setting內 格式：key,val
url (目標網址)
img_path (辨識圖片內文字,影像存取位置)
outputText (抓取文字輸出紀錄）
driverPath (Chrome driver位置, 要用其他browser自行修改)
offsetX,offsetY (頻幕抓取圖片座標調整)
marginRight,marginBottom （頻幕抓取圖片向右或向下拓寬）
browserW,browserH（瀏覽器window size）
ocrMode(文字辨識技術 0:pytesseract 1:easyocr(推薦))
#--------
//Setting
url,https://officemail.cloudmax.com.tw/
img_path,/Users/paking-guest/Desktop/pythonTool/Crawler_Script/screen.png
outputText,/Users/paking-guest/Desktop/pythonTool/Crawler_Script/outputText.txt
driverPath,/Users/paking-guest/Desktop/pythonTool/Crawler_Script/chromedriver
offsetX,925
offsetY,480
marginRight,120
marginBottom,70
browserW,1440
browserH,900
ocrMode,1
//Setting


#--------
#將腳本動作寫入Script內 格式：action,Tag / Attr,Value of Tag / Attr,....
ex : text,TAG_NAME,td // 爬所有<td>內的文字
#--------
//Script
text,TAG_NAME,td
//Script

/////////////////HOW TO USE///////////////////

#offset, marginRight 抓取影像校正

// 1.Action
input #輸入文字
click #點擊
text #取得文字
recognize #辨識圖片文字
js # do js script


// 2.Html Tag or attri
1.ID = "id" # filter by ID
2.NAME = "name" # filter by NAME
3.TAG_NAME = "tag name" # filter by tag name
4.CLASS_NAME = "class name" # filter by class name 有空白無法使用 請用css or xpath
5.CSS_SELECTOR = "css selector"  # filter by css
    # <div id="food">
    #   <span class="dairy">milk</span>
    #   <span class="dairy aged">cheese</span>
    # </div>  
    element = driver.find_element(:css, '#food span.dairy')
6.XPATH = "xpath"
    # <ul class="dropdown-menu">
    #   <li><a href="/login/form">Login</a></li>
    #   <li><a href="/logout">Logout</a></li>
    # </ul>
    element = driver.find_element(:xpath, '//a[@href='/logout']')
7.LINK_TEXT = "link text"
8.PARTIAL_LINK_TEXT = "partial link text"


// 3. tag or attr val
# tag or attr 是什麼

// 4. input val or null
# action 是 input 才有值
